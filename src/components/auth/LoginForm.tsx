"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/vpeTfK1CKq5
 */
import { CardTitle, CardDescription, CardHeader, CardContent, CardFooter, Card } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { useMutation } from "@tanstack/react-query";
import { signIn } from "next-auth/react";
import { useState } from "react";
import { useRouter } from "next/navigation";
import { toast } from "sonner";
import { LoaderIcon } from "lucide-react";

export function LoginForm() {
  const [error, setError] = useState("");
  // const [form, setForm] = useState({
  //   email: "",
  //   password: "",
  // });
  const router = useRouter();
  const { mutate, isPending } = useMutation({
    mutationKey: ["signIn"],
    onMutate: async (data: { email: string; password: string }) => {
      setError("");
      const res = await signIn("credentials", {
        email: data.email,
        password: data.password,
        callbackUrl: "/dashboard",
        redirect: false,
      });

      if (!res?.ok) {
        setError("Invalid credentials");
        toast.error("Invalid credentials");

        return;
      }
      router.push("/dashboard");

      toast.success("Sign in successfully");
    },
  });
  return (
    <Card>
      <form
        onSubmit={(e) => {
          e.preventDefault();
          const formData = new FormData(e.target as HTMLFormElement);
          const form = Object.fromEntries(formData.entries()) as { email: string; password: string };
          mutate(form);
        }}
      >
        <CardHeader>
          <CardTitle>Login</CardTitle>
          <CardDescription>Enter your email below to login to your account.</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="space-y-2">
            <Label htmlFor="email">Email</Label>
            <Input name="email" id="email" placeholder="m@example.com" required type="email" />
          </div>
          <div className="space-y-2">
            <Label htmlFor="password">Password</Label>
            <Input name="password" id="password" required type="password" />
          </div>
        </CardContent>
        <CardFooter className="flex flex-col">
          {error && <p className="text-red-500 my-2 text-sm">{error}</p>}

          <Button className="w-full" type="submit">
            {isPending ? <LoaderIcon className="w-5 h-5 animate-spin" /> : "Login"}
          </Button>
        </CardFooter>
      </form>
    </Card>
  );
}
